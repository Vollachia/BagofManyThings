@page "/RolePicker"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using BagOfManyThings.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject NavigationManager NavigationManager
    


<AuthorizeView>
    <Authorized>
<h1>Choose Your Role</h1>
<div>
    <button class="btn-drop" @onclick="AssignPlayer">
        Player
    </button>
    <button class="btn-drop" @onclick="AssignDM">
        Dungeon Master
    </button>
</div>
    </Authorized>
    <NotAuthorized>
        <h1>
            Please log into your account.
        </h1>
    </NotAuthorized>
</AuthorizeView>

@code {

    private ApplicationUser? user = default;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    }



    private async Task AssignPlayer()
    {
        if (user == null)
        {
            return;
        }

        await UserManager.AddToRoleAsync(user, "Player"); // Assign the role

        // signing in the user again to update their claims
        await SignInManager.RefreshSignInAsync(user);

        NavigationManager.NavigateTo("/");//change this to Player specific website
    }
    private async Task AssignDM()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        if (user == null)
        {
            return;
        }

        await UserManager.AddToRoleAsync(user, "DM"); // Assign the role


        // signing in the user again to update their claims
        await SignInManager.RefreshSignInAsync(user);

        NavigationManager.NavigateTo("/");//change this to DM specific website
    }
}