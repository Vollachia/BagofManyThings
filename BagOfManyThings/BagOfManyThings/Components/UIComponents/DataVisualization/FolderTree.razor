
@using System.IO
@using BagOfManyThings.Components.Boards
@using BagOfManyThings.Components.UIComponents

@inject NavigationManager NavigationManager
@inject FileService FileSystem

<Confirm @ref="DeleteConfirmation" ConfirmationChanged="ConfirmDeleteClick"
         ConfirmationMessage=@($"Are you sure you want to delete \"{Path.GetFileName(folderPath)}\"? This WILL delete all nested files and folders.")>
</Confirm>
<Confirm @ref="CreateMdConfirmation" ConfirmationChanged="ConfirmCreateMdClick" HasInput=true
    ConfirmationMessage="Please name your file:"
         ConfirmationTitle="Create Markdown File"
        ConfirmationButton="Confirm">
</Confirm>
<Confirm @ref="CreateFolderConfirmation" ConfirmationChanged="ConfirmCreateFolderClick" HasInput=true
    ConfirmationMessage="Please name your folder:"
ConfirmationTitle="Create Folder"
ConfirmationButton="Confirm">
</Confirm>

<div>
        @if (Directory.Exists(folderPath))
        {
            <div class="item-div">
                📁@Path.GetFileName(folderPath)
            <button class="btn btn-danger btn-sm" title="Delete" @onclick="() => DeleteClick() ">
                ❌
                </button>
                <button class="btn btn-success btn-sm" title="Add New Markdown File" @onclick="() => CreateMdClick()">
                ➕🗒
            </button>
            <button class="btn btn-success btn-sm" title="Add New Folder" @onclick="() => CreateFolderClick()">
                ➕📁
            </button>
            </div>
            <ul style="list-style-type:none;">
                @foreach (string item in Directory.EnumerateFileSystemEntries(folderPath))
                {
                    <li style="list-style-type:none;">
                    @if (File.Exists(item))
                    {
                        <MarkdownFile itemPath=@item/>
                    }
                    else if (Directory.Exists(item))
                        {
                            <FolderTree folderPath=@item/>
                        }
                    </li>
                }
            </ul>
        }
    </div>




@code {


    [Parameter]
    public string? folderPath { get; set; }

    private ConfirmBase DeleteConfirmation { get; set; }
    private ConfirmBase CreateMdConfirmation { get; set; }
    private ConfirmBase CreateFolderConfirmation { get; set; }

    private void DeleteClick()
    {
        DeleteConfirmation.Show();
    }
    private void ConfirmDeleteClick(bool deleteConfirmed)
    {
        if(deleteConfirmed)
        {   
            Directory.Delete(folderPath, true);
            NavigationManager.Refresh(true);
        }
    }

    private void CreateMdClick()
    {
        CreateMdConfirmation.Show();
    }  
    private void CreateFolderClick()
    {
        CreateFolderConfirmation.Show();
    }

    private void ConfirmCreateMdClick(bool CreateMdConfirmed)
    {
        if(CreateMdConfirmed)
        {
            if (Path.Exists(Path.Combine(folderPath, CreateMdConfirmation.InputText + ".md")))
            {
                CreateMdConfirmation.errorMessage = "Path already exists.";
                CreateMdConfirmation.Show();
            }
            else
            {
                CreateMdConfirmation.errorMessage = null;
                FileSystem.CreateMarkdownFileAsync(folderPath, CreateMdConfirmation.InputText);
                NavigationManager.Refresh(true);
            }

        }
        else
        {
            CreateMdConfirmation.errorMessage = null;
            CreateMdConfirmation.InputText = "Untitled";
        }

    }
    private void ConfirmCreateFolderClick(bool CreateFolderConfirmed)
    {
        if(CreateFolderConfirmed)
        {
            if (Path.Exists(Path.Combine(folderPath, CreateFolderConfirmation.InputText)))
            {
                CreateFolderConfirmation.errorMessage = "Path already exists.";
                CreateFolderConfirmation.Show();
            }
            else
            {
                CreateFolderConfirmation.errorMessage = null;
                FileSystem.CreateFolderInDirectory(folderPath, CreateFolderConfirmation.InputText);
                CreateFolderConfirmation.InputText = "Untitled";
                NavigationManager.Refresh(true);

            }

        }
        else
        {
            CreateFolderConfirmation.errorMessage = null;
            CreateFolderConfirmation.InputText = "Untitled";
        }

    }


}